{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/ImageLinkForm/ImageLinkForm.js","particlesOptions.js","App.js","ApiKey.js","registerServiceWorker.js","index.js"],"names":["FaceRecognition","imageUrl","boxes","className","id","alt","src","width","height","map","box","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","onClick","particlesOptions","particles","number","value","density","enable","value_area","color","shape","stroke","polygon","nb_sides","image","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","app","Clarifai","App","apiKey","calculateFaceLocations","data","document","getElementById","Number","outputs","regions","face","clarifaiFace","region_info","bounding_box","left_col","top_row","right_col","bottom_row","displayFaceBoxes","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","json","catch","err","console","log","this","params","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f9037c8e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FaceRecognition.css\";\n\nconst FaceRecognition = ({ imageUrl, boxes }) => {\n  return (\n    <div className=\"center ma\">\n      <div className=\"absolute mt2\">\n        <img\n          id=\"inputImage\"\n          alt=\"\"\n          src={imageUrl}\n          width=\"500px\"\n          height=\"auto\"\n        />\n        {boxes.map((box) => {\n          return (\n            <div\n              className=\"bounding-box\"\n              style={{\n                top: box.topRow,\n                right: box.rightCol,\n                bottom: box.bottomRow,\n                left: box.leftCol,\n              }}\n            ></div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from \"react\";\nimport \"./ImageLinkForm.css\";\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <p className=\"f3 bg-light-blue\">\n        {\"This magic app will detect faces in your pictures. Give it a try.\"}\n      </p>\n      <div className=\"center\">\n        <div className=\"form center pa4 br3 shadow-5\">\n          <input\n            className=\"f4 pa2 w-70 center\"\n            type=\"tex\"\n            onChange={onInputChange}\n          />\n          <button\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\n            onClick={onButtonSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","const particlesOptions = {\n  particles: {\n    number: { value: 6, density: { enable: true, value_area: 800 } },\n    color: { value: \"#1b1e34\" },\n    shape: {\n      type: \"polygon\",\n      stroke: { width: 0, color: \"#000\" },\n      polygon: { nb_sides: 6 },\n      image: { src: \"img/github.svg\", width: 100, height: 100 },\n    },\n    opacity: {\n      value: 0.3,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 1,\n        opacity_min: 0.1,\n        sync: false,\n      },\n    },\n    size: {\n      value: 160,\n      random: false,\n      anim: {\n        enable: true,\n        speed: 10,\n        size_min: 40,\n        sync: false,\n      },\n    },\n    line_linked: {\n      enable: false,\n      distance: 200,\n      color: \"#ffffff\",\n      opacity: 1,\n      width: 2,\n    },\n    move: {\n      enable: true,\n      speed: 8,\n      direction: \"none\",\n      random: false,\n      straight: false,\n      out_mode: \"out\",\n      bounce: false,\n      attract: { enable: false, rotateX: 600, rotateY: 1200 },\n    },\n  },\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onhover: { enable: false, mode: \"grab\" },\n      onclick: { enable: false, mode: \"push\" },\n      resize: true,\n    },\n    modes: {\n      grab: { distance: 400, line_linked: { opacity: 1 } },\n      bubble: {\n        distance: 400,\n        size: 40,\n        duration: 2,\n        opacity: 8,\n        speed: 3,\n      },\n      repulse: { distance: 200, duration: 0.4 },\n      push: { particles_nb: 4 },\n      remove: { particles_nb: 2 },\n    },\n  },\n  retina_detect: true,\n};\n\nexport default particlesOptions;\n","import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport API_KEY from \"./ApiKey\";\nimport \"./App.css\";\nimport particlesOptions from \"./particlesOptions\";\n\nconst app = new Clarifai.App({\n  apiKey: API_KEY,\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      boxes: [],\n    };\n  }\n\n  calculateFaceLocations = (data) => {\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const faceLocations = data.outputs[0].data.regions.map((face) => {\n      const clarifaiFace = face.region_info.bounding_box;\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height,\n      };\n    });\n    return faceLocations;\n  };\n\n  displayFaceBoxes = (boxes) => {\n    this.setState({ boxes: boxes });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) => {\n        if (response) {\n          fetch(\"http://localhost:3000/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n          }).then((response) => response.json());\n        }\n        this.displayFaceBoxes(this.calculateFaceLocations(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const { boxes, imageUrl } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <div>\n          <ImageLinkForm\n            onInputChange={this.onInputChange}\n            onButtonSubmit={this.onButtonSubmit}\n          />\n          <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const API_KEY = \"5df446e4e6b44d8eb8a2ae53678b7c2d\";\n\nexport default API_KEY;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}